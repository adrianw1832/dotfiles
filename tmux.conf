# List of plugins
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tpm'

# Last saved environment is automatically restored when tmux is started.
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'iterm,fullscreen'
set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Restoring vim sessions and other running programs for tmux-resurrect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes ':all:'

# Ctrl-j prefix key. Default => C-b. Send C-j with repeat option via C-j C-j
unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

# Define the default shell command for opening new windows
set -g default-command "tmux rename-window zsh; reattach-to-user-namespace -l ${SHELL}"

# Use 256 colors
set -g default-terminal "screen-256color"

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Use emacs/ readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Less colourful status bar
set -g status-bg '#242231'
set -g status-fg '#aaaaaa'

# Makes the window list easier to read
set-window-option -g window-status-format " #I: #W "
set-window-option -g window-status-fg white

set-window-option -g window-status-current-format " #I: #W "
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg '#45413b'

# Centre window list
set -g status-justify centre

# Left prompt
set -g status-left-length 30

# Right prompt
set -g status-right-length 100
set -g status-right "$spotify_song $spotify_artist | Battery: #{battery_icon} #{battery_percentage} | #(date '+%a, %b %d - %H:%M') |"

# Better rebinding for splits
bind-key h split-window -v
bind-key v split-window -h

# Break pane to new window
bind-key b break-pane -d

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# New window
bind C-n new-window -c "#{pane_current_path}"

# Window numbering
set -g base-index 1
set -g renumber-windows on

# Choosing session
bind c choose-tree

# Rebinding copy mode
bind y copy-mode

# Switching between sessions
bind-key Space switch-client -l

# Mouse config
set -g mouse on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Prompted join-pane
bind-key j command-prompt -p "join pane from:" "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key C-s display-panes\; command-prompt -p "pane #:" "swap-pane -t '%%'"

# Break out a new tmux session
bind-key C-b send-keys 'tat && exit' 'C-m'

# Kill window
bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window

# Kill session
bind-key C-k confirm-before -p "kill-session #S? (y/n)" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\" || tmux kill-session'"

# Keep window names as I set them
setw -g automatic-rename off

# Rename window to new name
bind-key w rename-window to\; command-prompt -p "Name of new window:" "rename-window '%%'"

# Rename session to new name
bind-key s rename-session to\; command-prompt -p "Name of new session:" "rename-session '%%'"

# Decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# Turn off auto rename
set-option -g allow-rename off

# Keep window names as I set them
setw -g automatic-rename off

# Spotify message
spotify_song="#(osascript ~/dotfiles/spotify_song.scpt|cut -c1-30)"
spotify_artist="#(osascript ~/dotfiles/spotify_artist.scpt|cut -c1-20)"

# Initialize Tmux plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
