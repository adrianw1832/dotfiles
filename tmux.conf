# Ctrl-s prefix key. Default => C-b. Send C-s with repeat option via C-s C-s
unbind C-b
set -g prefix C-s
bind -r C-s send-prefix

# use 256 colors
set -g default-terminal "screen-256color"

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Use emacs / readline key-bindings at the tmux command prompt `<prefix>:`
set -g status-keys emacs

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Less colourful status bar
set -g status-bg '#666666'
set -g status-fg '#aaaaaa'

#Left prompt
set -g status-left-length 50

#Right prompt
set -g status-right " #(date '+%a, %b %d - %H:%M') "

bind-key s split-window -v  -c '#{pane_current_path}'
bind-key v split-window -h  -c '#{pane_current_path}'

bind-key b break-pane -d

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# New window
bind n new-window -c "#{pane_current_path}"

set -g base-index 1
set -g renumber-windows on

bind c choose-tree

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
